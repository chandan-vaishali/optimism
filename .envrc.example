##################################################
#                 Getting Started                #
##################################################

# Admin account
export GS_ADMIN_ADDRESS=0x538ec20ABc7dFd1DE2aeb7D2E94533e8f37caBEd
export GS_ADMIN_PRIVATE_KEY=0xca2fc3bcd1578b1e83214107c0119a1aaca26a5e990bc8bb815bf137b851a3c2

# Batcher account
export GS_BATCHER_ADDRESS=0xb0c4509Cea1f9E86B4215D7a6257352b6C054140
export GS_BATCHER_PRIVATE_KEY=0x536baaa43b7996e352007154e2369e01ce46eab5df9d20f5759dec95b2bf169a

# Proposer account
export GS_PROPOSER_ADDRESS=0x9E7D1a695579c9b8d0bdbD445564bbA971ba64f1
export GS_PROPOSER_PRIVATE_KEY=0xc5fe3e4a10e54f1db981cacaf9d93d0ab43bbd8213851a19e62eea546d054643

# Sequencer account
export GS_SEQUENCER_ADDRESS=0x98E06f5C1BdaFE13CFf9eb0D403Aa34699BbfAF4
export GS_SEQUENCER_PRIVATE_KEY=0x5ff623d8005b63d8e4f9a08be89312d9426cc034bed042b26aeef84ff108878c


##################################################
#                Chain Information               #
##################################################

# L1 chain information
export L1_CHAIN_ID=11155111
export L1_BLOCK_TIME=12

# L2 chain information
export L2_CHAIN_ID=42069
export L2_BLOCK_TIME=2

##################################################
#              op-node Configuration             #
##################################################

# The kind of RPC provider, used to inform optimal transactions receipts
# fetching. Valid options: alchemy, quicknode, infura, parity, nethermind,
# debug_geth, erigon, basic, any.
export L1_RPC_KIND=infura

##################################################
#               Contract Deployment              #
##################################################

# RPC URL for the L1 network to interact with
export L1_RPC_URL=https://sepolia.infura.io/v3/

# Salt used via CREATE2 to determine implementation addresses
# NOTE: If you want to deploy contracts from scratch you MUST reload this
#       variable to ensure the salt is regenerated and the contracts are
#       deployed to new addresses (otherwise deployment will fail)
export IMPL_SALT=$(openssl rand -hex 32)

# Name for the deployed network
export DEPLOYMENT_CONTEXT=getting-started

# Optional Tenderly details for simulation link during deployment
export TENDERLY_PROJECT=
export TENDERLY_USERNAME=

# Optional Etherscan API key for contract verification
export ETHERSCAN_API_KEY=

# Private key to use for contract deployments, you don't need to worry about
# this for the Getting Started guide.
export PRIVATE_KEY=